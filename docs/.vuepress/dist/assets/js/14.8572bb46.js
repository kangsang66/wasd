(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{601:function(n,t,e){"use strict";e.r(t);var a=e(9),s=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"jquery总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jquery总结"}},[n._v("#")]),n._v(" jQuery总结:")]),n._v(" "),e("h3",{attrs:{id:"_1-转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-转换"}},[n._v("#")]),n._v(" 1.转换")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("           - jQuery是基于原生js进行封装的\n             一些常见的属性和方法\n           - jQuery和js对象可以相互转换 \n             => $('div')[index]  | $('div').get(index)\n           - jQuery在某些场景下需要转换为\n             DOM对象\n")])])]),e("h3",{attrs:{id:"_2-常用api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用api"}},[n._v("#")]),n._v(" 2.常用API")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("            - 选择器\n                -- $('#id')  id\n                -- $('*')  全选\n                -- $('.id')  class\n                -- $('div')   标签\n                -- $('div,p,li')   多选\n                -- $('div.current')   交集选择\n                -- $('ul li')  孩子选择\n\n            - 隐式迭代\n                -- 遍历内部DOM元素(伪数组形式存储)的过程\n                -- 给所有元素进行循环遍历,执行相应方法,简化操作\n                -- $('div').css('属性','值')\n                -- \n\n            - 筛选选择器\n                -- $('li:first')  第一个li元素\n                -- $('li:last')   最后一个li元素\n                -- $('li:eq(1)')  第二个li元素\n                -- $('li:odd')    奇数个元素\n                -- $('li:even')   偶数个元素\n\n            - 筛选方法(重点)\n                -- $('li').parent();            查找li的父级元素\n                -- $('ul').children('li');      查找ul的最近一级(亲儿子)\n                -- $('ul').find('li');          查找ul的后代所有li元素\n                -- $('.first').siblings('li');  查找兄弟节点,不包括自己本身\n                -- $('.first').nextAll();       查找当前元素之后所有的同辈元素\n                -- $('.last').preAll();         查找当前元素之前所有的同辈元素\n                -- $('div').hasClass('protected') 检查该元素是否有该类名\n                -- $('li').eq(2)                查找li里面的第三个元素\n                -- $('div').parents('选择器')    查找div的祖先级元素\n            - 排他思想\n                -- $(function(){\n                    $('button').click(function(){\n                        当前元素修改样式\n                        $(this).css('background','pink')\n                        当前元素的兄弟节点修改样式\n                        $(this).siblings('button').css('background','')\n                    })\n                })\n            \n            - 链式编程\n                -- $(function(){\n                    $('button').click(function(){\n                        $(this).css('background','pink').siblings().css('background','')\n                    })\n                })\n\n            - 操作CSS方法\n                -- 参数只写属性名 => 返回属性值\n                -- 当属性值为数字时可以不用加单元和引号\n                -- 当参数为多个属性时,用冒号隔开,并用{} 包裹 =>对象的写法\n                    -- $(this).css({\n                        'font-size':'16px',\n                        'color':'red'\n                    })\n                \n            - 设置类样式方法 => 等同于 classList\n                -- $('div').addClass('current');   添加类\n                -- $('div').removeClass('current') 删除类\n                -- $('div').toggleClass('current') 切换类 => 常用于多次点击\n")])])]),e("h3",{attrs:{id:"_3-jquery的常见效果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-jquery的常见效果"}},[n._v("#")]),n._v(" 3.jQuery的常见效果")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("            -- 显示隐藏\n                -- show()\n                    以下效果均为该参数\n                    -- show(speed,easing,fn)\n                        -- speed => 速度 \n                            -- slow\n                            -- normal\n                            -- fast\n                        -- easing => 切换效果\n                            -- swing (默认)\n                            -- linear\n                        -- fn => 回调函数\n                    -- hide()\n                    -- toggle()\n        \n            -- 滑动\n                -- slideDown()\n                -- slideUp()\n                -- slideToggle()\n\n            -- 淡入淡出\n                -- fadeln()\n                -- fadeOut()\n                -- fadeToggle()\n                -- fadeTo()\n                    -- fadeTo(speed,opacity(透明度),easing,fn)\n                        -- opacity 取值0-1\n\n            -- 自定义动画\n                -- animate()\n                    -- animate({params},speed,easing,fn)\n                        -- params 是更改的样式属性,以对象形式书写\n                        -- {\n                            width:500px,\n                            top:300px\n                            }\n\n            -- 事件切换\n                -- hover\n                    -- hover(over,out);\n                        -- over => 相当于mouseenter(鼠标经过)\n                        -- out  => 相当于mouseleave(鼠标移出)\n                    -- 注意:\n                        -- 如果只在hover里面写一个函数,鼠标经过和移出都会触发\n                        -- $('ul').hover(function(){\n                            $(this).children('li').slideToggle();\n                        })\n                    -- 解决动画排队问题\n                        -- stop() 写在动画函数前 => 表示停止上一次的动画只执行当前的动画\n")])])]),e("h3",{attrs:{id:"_4-jquery属性操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-jquery属性操作"}},[n._v("#")]),n._v(" 4.jQuery属性操作")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("            -- 获取/修改原有属性值\n                -- element.prop('属性名')\n                    -- $('a').prop.('href')  \n            -- 获取/修改自定义属性值\n                -- element.attr('属性名')\n                    -- $('div').attr('index')      => getAttribute()\n                -- element.attr('属性名','值')\n                    -- $('div').attr('index','2')  => setAttribute()\n\n            -- 数据缓存 data() => 在指定的元素上存取数据,不会修改DOM元素结构,页面刷新后消失\n                -- $('span').data('uname','andy')  => sessionStorage(会话存储)\n")])])]),e("h3",{attrs:{id:"_5-jquery内容文本值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-jquery内容文本值"}},[n._v("#")]),n._v(" 5.jQuery内容文本值")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("            -- 获取设置元素内容 html()     => innerHTML\n                -- $('div').html()        => 拿到div里面的值\n                -- $('div').html('123')   => 修改div里面的值\n            -- 获取设置元素文本内容 text()  => innerText()\n                -- $('div').text()        => 拿到div里面的文本值\n                -- $('div').text('123')   => 修改div里面的文本值\n            -- 获取设置表单的值\n                -- $('input').val()       => 获取input的value值\n                -- $('input').val('123')  => 修改input的value值\n")])])]),e("h3",{attrs:{id:"_6-jquery元素操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-jquery元素操作"}},[n._v("#")]),n._v(" 6.jQuery元素操作")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("            -- 遍历\n                -- each() => 针对DOM元素的遍历\n                    -- 一般each()方法和数组连用 => 通过数组索引来获取改变的样式\n                    -- $('div').each(function(index,domel) \n                    })\n            -- $.each() => 针对数组、对象\n                -- 可以用来遍历任何对象 => 主要用于数据处理,数组、对象\n                -- $.each(object,function(index,element) \n                })\n            -- 创建\n                -- 创建元素\n                    -- $('&lt;li>123456&lt;/li>')\n            -- 添加\n                -- 在内部添加 => 父子关系\n                    -- $('ul').append(li)  => 添加到ul内部的最后    => appendchild\n                    -- $('ul').prepend(li) => 添加到ul内部的最前面  => insertbefore\n                -- 在外部添加 => 兄弟关系\n                    -- $('ul').after('内容')  => 添加到ul的后面\n                    -- $('ul').before('内容') => 添加到ul的前面\n            -- 删除\n                -- $('ul').remove() => 删除ul元素\n                -- $('ul').empty()  => 删除ul元素内部的子元素\n                -- $('ul').html('') => 删除ul元素内部的子元素\n")])])]),e("h3",{attrs:{id:"_7-jquery尺寸、位置操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-jquery尺寸、位置操作"}},[n._v("#")]),n._v(" 7.jQuery尺寸、位置操作")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("            -- 尺寸\n                -- width()/height()             => 取得匹配元素宽度和高度值\n                -- innerWidth() / innerHeight() => 取得匹配元素宽度和高度值包含\t\t\t\t\t\t\t\t\t\t\t\t\t   padding\n                -- outerWidth() / outerHeight() => 取得匹配元素宽度和高度值包含\t\t\t\t\t\t\t\t\t\t\t\t\t   padding、border\n                -- outerWidth(true) / outerHeight(true) => 取得匹配元素宽度和高度值包\t\t\t\t\t\t\t\t\t\t\t\t\t\t含padding、border、margin\n            -- 位置\n                -- offset()                     => 相对于文档的位置\n                -- position()                   => 相对于带有定位父元素的位置\n                -- scrollTop()/scrollLeft()     => 相对于整个文档被卷去的位置\n")])])]),e("h3",{attrs:{id:"_8-jquery事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-jquery事件"}},[n._v("#")]),n._v(" 8.jQuery事件")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("            -- 事件注册\n                -- $(function(){\n                    $('div').click(function(){\n                        $(this).css('background','purple');\n                    })\n                })\n            -- 事件处理\n                -- 写法\n                    $('div').on({\n                        mouseenter:function(){\n                            $(this).css('background','purple');\n                        },\n                        click:function(){\n                            $(this).css('background','pink');\n                        },\n                        ...\n                    })\n                -- (1).如果事件处理程序函数相同\n                    $('div').on('click blur focus',function(){\n                        $(this).css('background','purple');\n                    })\n                -- (2).实现事件委派\n                    $('ul').on('click','li',function(){\n                        $(this).css('background','purple')\n                    })\n                -- (3).动态绑定事件\n                    $('ul').on('click','li',function(){\n                        alert('11');\n                    })\n                -- off()解绑事件\n                    $('div').off();\n                    $('div').off('click');\n                    $('div').off('click','li');\n                -- one()绑定触发一次事件\n                    $('div').one('click',function(){\n                        ...\n                    })\n                -- 自动触发事件\n                    $('div').click()\n                -- 事件对象\n                    -- 阻止默认冒泡行为\n                        -- stopPropagation()\n\n")])])]),e("h3",{attrs:{id:"_9-其他方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-其他方法"}},[n._v("#")]),n._v(" 9.其他方法")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("            -- jQuery拷贝对象\n                -- $.extend(浅拷贝还是深拷贝,拷贝给谁,拷贝谁)\n            -- 多库共存\n                -- 解决方法\n                    $ => jQuery\n                    let 变量名 = $.noConflict()\n            -- jQuery插件\n                -- 瀑布流\n                -- 图片懒加载\n                    -- 页面滑到可视区域,再显示图片\n                -- 全屏滚动插件fullpages.js\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);